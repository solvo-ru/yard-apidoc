{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "xxuylnzrxq62x"
  },
  "info": {
    "title": "carrier-api",
    "version": "1.0",
    "description": "API Портала Перевозчика"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "summary": "OAuth token request",
        "description": "Requests an OAuth token",
        "requestBody": {
          "description": "OAuth token request",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "enum": [
                      "authorization_code",
                      "refresh_token"
                    ]
                  },
                  "code": {
                    "type": "string",
                    "description": "Authorization code"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "Redirect URI"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Client ID"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Client secret"
                  }
                },
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OAuth token response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Access token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Token type"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Token expiration time"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/oauth/revoke": {
      "post": {
        "summary": "OAuth token revocation",
        "description": "Revokes an OAuth token",
        "requestBody": {
          "description": "OAuth token revocation request",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Token to revoke"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token revoked"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/oauth/userinfo": {
      "get": {
        "summary": "OAuth userinfo",
        "description": "Retrieves userinfo for the authenticated user",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Userinfo response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub": {
                      "type": "string",
                      "description": "User ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "User name"
                    },
                    "email": {
                      "type": "string",
                      "description": "User email"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/shipment-rfp": {
      "get": {
        "summary": "Получить список заявок на перевозку",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ShipmentRfpList"
          }
        },
        "x-stoplight": {
          "id": "tqg739xajhhay"
        }
      },
      "post": {
        "summary": "Создать новую заявку на перевозку",
        "responses": {
          "201": {
            "description": "Заявка на перевозку создана",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentRfp"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentRfp"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "fw6nr3929yihh"
        }
      },
      "parameters": []
    },
    "/shipment-rfp/{id}": {
      "get": {
        "summary": "Получить детали заявки на перевозку",
        "responses": {
          "200": {
            "description": "Детали заявки на перевозку",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentRfp"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID заявки на перевозку",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-stoplight": {
          "id": "m2sic3aqvfkxj"
        }
      },
      "put": {
        "summary": "Обновить заявку на перевозку",
        "responses": {
          "200": {
            "description": "Заявка на перевозку обновлена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentRfp"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID заявки на перевозку",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentRfp"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "1zyqx7m0ulvt7"
        }
      },
      "delete": {
        "summary": "Удалить заявку на перевозку",
        "responses": {
          "204": {
            "description": "Заявка на перевозку удалена"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID заявки на перевозку",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-stoplight": {
          "id": "kzux2ii36wpx0"
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/offers": {
      "get": {
        "summary": "Получить список предложений",
        "responses": {
          "200": {
            "$ref": "#/components/responses/offerList"
          }
        },
        "x-stoplight": {
          "id": "0udcekiahq0th"
        }
      },
      "post": {
        "summary": "Создать новое предложение",
        "responses": {
          "201": {
            "description": "Предложение создано",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "08bn7pfk96yph"
        }
      },
      "parameters": []
    },
    "/offers/{id}": {
      "get": {
        "summary": "Получить детали предложения",
        "responses": {
          "200": {
            "description": "Детали предложения",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID предложения",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-stoplight": {
          "id": "m3im9k796ilqp"
        }
      },
      "put": {
        "summary": "Обновить предложение",
        "responses": {
          "200": {
            "description": "Предложение обновлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID предложения",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "33eep3ue1k0r1"
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/catalogs": {
      "get": {
        "summary": "Retrieve a list of all catalogs",
        "tags": [],
        "responses": {},
        "operationId": "get-catalogs",
        "x-stoplight": {
          "id": "yhbnufi046opt"
        },
        "description": ""
      },
      "post": {
        "summary": "Create new catalog",
        "tags": [],
        "responses": {},
        "operationId": "post-catalogs",
        "x-stoplight": {
          "id": "0er9wjghvzb88"
        }
      },
      "put": {
        "summary": "Update catalog metadata",
        "tags": [],
        "responses": {},
        "operationId": "put-catalogs",
        "x-stoplight": {
          "id": "owz0101ooj5wh"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://example.com/auth/realms/master/protocol/openid-connect/auth",
            "tokenUrl": "https://example.com/auth/realms/master/protocol/openid-connect/token",
            "refreshUrl": "",
            "scopes": {
              "userinfo": "userinfo"
            }
          }
        }
      }
    },
    "schemas": {
      "OAuthTokenRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "authorization_code",
              "refresh_token"
            ]
          },
          "code": {
            "type": "string",
            "description": "Authorization code"
          },
          "redirect_uri": {
            "type": "string",
            "description": "Redirect URI"
          },
          "client_id": {
            "type": "string",
            "description": "Client ID"
          },
          "client_secret": {
            "type": "string",
            "description": "Client secret"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ]
      },
      "ShipmentRfp": {
        "title": "Заявка на перевозку",
        "description": "Объект системы, содержащий информацию о планируемом перемещении груза из одной точки в другую",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "type": "object",
            "required": [
              "customer",
              "expectedVehicle",
              "targets"
            ],
            "properties": {
              "num": {
                "type": "string",
                "description": "Идентификатор перевозки"
              },
              "customer": {
                "$ref": "#/components/schemas/Contractor",
                "description": "Контрагент, являющийся заказчиком перевозки"
              },
              "expectedVehicle": {
                "type": "array",
                "description": "Один или несколько типов ТС, которое должно выполнять перевозку ",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/TransportType"
                }
              },
              "comments": {
                "type": "array",
                "description": "Список замечаний (причин или отклонений) к перевозке, которые могут быть добавлены в процессе согласования",
                "items": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              "validSince": {
                "type": "string",
                "format": "date-time",
                "description": "Дата начала периода, когда заявка на перевозку актуальна."
              },
              "validUntill": {
                "type": "string",
                "format": "date-time",
                "description": "Дата окончания периода, когда заявка на перевозку актуальна."
              },
              "status": {
                "$ref": "../models/enum.json",
                "description": "Актуальный этап выполнения перевозки\n| **Статус**                     | **Описание**                                                 |\n| ------------------------------ | ------------------------------------------------------------ |\n| **Новая**                      | Заявка создана. Возможна корректировка параметров.           |\n| **Оформлена**                  | Создание заявки завершено. Корректировка параметров блокирована. |\n| **Приём предложений начат**    | Экспедитору могут просматривать заявку и делать предложения по ней. |\n| **Приём предложений завершён** | Возможность делать предложения блокируется.                  |\n| **Выносится решение**          | Логист просматривает предложения чтобы выбрать победителя.   |\n| **Победитель не выбран**       | Логист отклонил все предложения.                             |\n| **Победитель выбран**          | Логист выбрал предложение, подходящее по параметрам.         |\n| **Отказ экспедитора**          | Экспедитор, которого выбрали победителем торгов отказался от заявки. |\n| **Отменена**                   | Заявка на перевозку отменена логистом.                       |\n| **Готова к выполнению**        | Заявка на перевозку согласована и подготовлена к выполнению. |\n| **Отмена выполнения**          | Подготовленная заявка на перевозку отменена логистом.        |\n| **Выполняется**                | Начато выполнение перевозки.                                 |\n| **Не выполнена**               | Выполнение перевозки прервано.                               |\n| **Выполнена**                  | Выполнение перевозки успешно завершено.                      |"
              },
              "targets": {
                "type": "array",
                "minItems": 1,
                "description": "Список мест, в которых будет производиться обработка",
                "items": {
                  "$ref": "#/components/schemas/TransportTarget"
                }
              },
              "attachments": {
                "type": "array",
                "description": "Файлы, загруженные в систему, и прикрепленные к перевозке.",
                "items": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "source": {
                "$ref": "../models/enum.json",
                "description": "Способ создания заявки на перевозку."
              }
            }
          }
        ]
      },
      "TransportType": {
        "$ref": "../models/enum.json",
        "title": "Тип транспорта",
        "description": "Тип транспортного средства, используемого для согласования перевозок"
      },
      "Comment": {
        "type": "object",
        "required": [
          "ID",
          "text"
        ],
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid"
          },
          "text": {
            "type": "string",
            "x-stoplight": {
              "id": "91ob6vpqzrmyo"
            }
          }
        },
        "title": "Комментарий"
      },
      "TransportTarget": {
        "title": "Цель перевозки",
        "description": "Объект системы, содержащий информацию о месте обработки перевозки",
        "allOf": [
          {
            "type": "object",
            "required": [
              "route",
              "sender",
              "loadAddress",
              "recipient",
              "unloadAddress"
            ],
            "properties": {
              "num": {
                "type": "string",
                "x-stoplight": {
                  "id": "pmp5q0rwpbizn"
                },
                "description": "Идентификатор цели перевозки"
              },
              "route": {
                "enum": [
                  "Ввоз",
                  "Вывоз"
                ],
                "description": "Направление движение груза относительно предприятия, на котором работает организатор перевозки"
              },
              "sender": {
                "$ref": "#/components/schemas/Contractor",
                "x-stoplight": {
                  "id": "ptvg7rp38gy41"
                },
                "description": "Название контрагента, который является отправителем груза. "
              },
              "loadLocation": {
                "$ref": "#/components/schemas/Location",
                "x-stoplight": {
                  "id": "otp2ig8232ldo"
                },
                "description": "Локация, в которой будет производиться погрузка груза на транспортное средство"
              },
              "loadAddress": {
                "type": "string",
                "x-stoplight": {
                  "id": "yb8bos7giv35u"
                },
                "description": "Адрес локации погрузки груза на транспортное средство"
              },
              "loadArrival": {
                "type": "string",
                "x-stoplight": {
                  "id": "3objcmjoopkyq"
                },
                "format": "date-time",
                "description": "Плановое время прибытия ТС в локацию погрузки."
              },
              "recipient": {
                "$ref": "#/components/schemas/Contractor",
                "x-stoplight": {
                  "id": "hboe4w6y1zf9m"
                },
                "description": "Название контрагента, который является получателем груза."
              },
              "unloadLocation": {
                "$ref": "#/components/schemas/Location",
                "x-stoplight": {
                  "id": "xex8cpib5onbc"
                },
                "description": "Локация, в которой будет производиться выгрузка груза с транспортного средства"
              },
              "unloadAddress": {
                "type": "string",
                "x-stoplight": {
                  "id": "95faow4s1tqma"
                },
                "description": "Адрес локации выгрузки груза с транспортного средства"
              },
              "unloadArrival": {
                "type": "string",
                "x-stoplight": {
                  "id": "5m8wg7fhcxqpw"
                },
                "format": "date-time",
                "description": "Плановое время прибытия ТС в локацию выгрузки."
              },
              "cargo": {
                "type": "array",
                "x-stoplight": {
                  "id": "jctsws721fc5j"
                },
                "description": "Список перевозимых грузов ",
                "items": {
                  "$ref": "#/components/schemas/Cargo",
                  "x-stoplight": {
                    "id": "mvlvea4y3lg10"
                  }
                }
              }
            }
          },
          {
            "$ref": "../models/mdm.json"
          }
        ]
      },
      "Attachment": {
        "type": "object",
        "title": "Приложение",
        "description": "Файл, загруженный в систему",
        "required": [
          "ID",
          "name",
          "size"
        ],
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "3wco45e8ckenv"
            }
          },
          "size": {
            "type": "integer",
            "x-stoplight": {
              "id": "6ts8a8vwfxo5e"
            }
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "nsae2knp8ephq"
            }
          }
        }
      },
      "Offer": {
        "title": "Предложение к заявке на перевозку",
        "description": "Объект системы, которое хранит информацию по заявлению экспедитора о готовности выполнить перевозку по выбранной заявке на перевозку",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "required": [
              "request",
              "forwarder",
              "carrier",
              "vehicle",
              "driver",
              "phone"
            ],
            "type": "object",
            "properties": {
              "request": {
                "$ref": "#/components/schemas/ShipmentRfp",
                "description": "Идентификатор заявки на перевозку"
              },
              "forwarder": {
                "$ref": "#/components/schemas/Contractor",
                "description": "Контрагент, который сделал предложение "
              },
              "carrier": {
                "$ref": "#/components/schemas/Contractor",
                "description": "Контрагент, выполняющий перевозку"
              },
              "vehicle": {
                "$ref": "#/components/schemas/Vehicle",
                "description": "Информация о транспортном средстве, на котором будет выполняться перевозка"
              },
              "driver": {
                "$ref": "#/components/schemas/Driver",
                "description": "Информация о водителе, который будут выполнять перевозку "
              },
              "phone": {
                "type": "string",
                "description": "Номер телефона для связи с водителем, актуальный на момент перевозки"
              },
              "comments": {
                "type": "array",
                "description": "Список замечаний (причин или отклонений) к предложений, которые могут быть добавлены в процессе согласования перевозки.",
                "items": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              "attachment": {
                "type": "array",
                "description": "Файлы, загруженные в систему и прикреплённые к предложению.",
                "items": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "status": {
                "$ref": "../models/enum.json",
                "description": "Статус предложения\n| **Статус**                  | **Описание**                                                 |\n| --------------------------- | ------------------------------------------------------------ |\n| **Новое**                   | Создано новое предложение.                                   |\n| **Выдвинуто**               | Создание предложения завершено. Предложение стало доступно для рассмотрения логистом. |\n| **Принято на рассмотрение** | Предложение принято на рассмотрение логистом.                |\n| **Запрошены корректировки** | Логист запросил корректировки по выдвинутому предложению.    |\n| **Корректируется**          | Параметры предложения корректируются экспедитором.           |\n| **Скорректировано**         | Процесс корректировки предложения завершён.                  |\n| **Предложение снято**       | Предложение отменено экспедитором.                           |\n| **Выносится решение**       | Сделанные по заявке предложения оцениваются с целью принятия решения. |\n| **Отклонено**               | Предложение отклонено логистом.                              |\n| **Выбрано победителем**     | Предложение выбрано победителем торгов.                      |\n| **Отказ от выполнения**     | Экспедитор отказался от выполнения перевозки по заявке.      |\n| **Исполняется**             | Начато выполнение перевозке по связанной заявке.             |"
              }
            }
          }
        ]
      },
      "Contractor": {
        "title": "Контрагент",
        "allOf": [
          {
            "type": "object",
            "required": [
              "ID",
              "title",
              "fullTitle",
              "type"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Сокращенное наименование контрагента, которое будет видно в интерфейсе"
              },
              "fullTitle": {
                "type": "string",
                "description": "Полное наименование контрагента, как оно прописано в правоустанавливающих документах"
              },
              "type": {
                "$ref": "../models/enum.json",
                "description": "Тип"
              },
              "role": {
                "type": "array",
                "minItems": 1,
                "description": "Роль",
                "items": {
                  "$ref": "../models/enum.json"
                }
              }
            }
          },
          {
            "$ref": "../models/mdm.json"
          }
        ]
      },
      "Vehicle": {
        "title": "Автотранспорт",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "type": "object",
            "required": [
              "plate",
              "haul",
              "type"
            ],
            "properties": {
              "plate": {
                "type": "string",
                "x-stoplight": {
                  "id": "o4rngfu7ila9r"
                },
                "pattern": "^[А-Я]{2}\\d{3,4}[А-Я]{2}(?: [А-Я]{2}\\d{3,4}[А-Я]{2})?$",
                "description": "Номер регистрационного знака транспортного средства. "
              },
              "haul": {
                "x-stoplight": {
                  "id": "9q247xvoh2np9"
                },
                "description": "Список контрагентов, которые могут использовать ТС",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contractor",
                  "x-stoplight": {
                    "id": "zzg3abq4qdl18"
                  }
                }
              },
              "type": {
                "$ref": "#/components/schemas/TransportType",
                "x-stoplight": {
                  "id": "z9dot6efy9eib"
                },
                "description": "Тип транспортного средства"
              },
              "model": {
                "type": "string",
                "x-stoplight": {
                  "id": "s8xs5wex8wirq"
                },
                "description": "Марка и модель ТС."
              },
              "desc": {
                "type": "string",
                "x-stoplight": {
                  "id": "6yw7np2d5fkco"
                },
                "description": "Описание ТС."
              }
            }
          }
        ]
      },
      "Driver": {
        "title": "Водитель",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "type": "object",
            "required": [
              "docNum",
              "name",
              "lastName",
              "birthday",
              "docType",
              "haul"
            ],
            "properties": {
              "docNum": {
                "type": "integer",
                "x-stoplight": {
                  "id": "h5umja2tjie2l"
                },
                "description": "Номер документа, удостоверяющего личность."
              },
              "name": {
                "type": "string",
                "x-stoplight": {
                  "id": "x3yk5hexohror"
                },
                "description": "Имя водителя"
              },
              "lastName": {
                "type": "string",
                "x-stoplight": {
                  "id": "l2cjzmq4o97p2"
                },
                "description": "Фамилия водителя"
              },
              "patronym": {
                "type": "string",
                "x-stoplight": {
                  "id": "vgmbeth7wokgn"
                },
                "description": "Отчество"
              },
              "birthday": {
                "type": "string",
                "x-stoplight": {
                  "id": "1howtj3dab9hd"
                },
                "format": "date",
                "description": "Дата рождения водителя"
              },
              "docType": {
                "$ref": "../models/enum.json",
                "x-stoplight": {
                  "id": "nes53j1f341xu"
                },
                "description": "Вид документа, удостоверяющего личность\n| **Значение** | **Описание**                   |\n| ------------ | ------------------------------ |\n| **Паспорт**  | Паспорт гражданина РФ.         |\n| **Права**    | Водительское удостоверение РФ. |"
              },
              "phone": {
                "type": "string",
                "x-stoplight": {
                  "id": "40k94faz1ocbv"
                },
                "description": "Номер телефона для связи с водителем.",
                "pattern": "^((\\+7)|8)\\d{10}$"
              },
              "haul": {
                "type": "array",
                "x-stoplight": {
                  "id": "ah8dblnlo964g"
                },
                "description": "Список контрагентов, которые могут использовать водителя.",
                "items": {
                  "$ref": "#/components/schemas/Contractor",
                  "x-stoplight": {
                    "id": "lf8wi1pf5i2sg"
                  }
                }
              }
            }
          }
        ]
      },
      "Location": {
        "title": "Локация",
        "description": "Используется для создания мест обработки перевозки",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "type": "object",
            "required": [
              "title"
            ],
            "properties": {
              "title": {
                "type": "string",
                "x-stoplight": {
                  "id": "b5akbo9poh4jm"
                },
                "description": "название места обработки"
              },
              "address": {
                "type": "string",
                "x-stoplight": {
                  "id": "bboyiahao6usm"
                },
                "description": "Адрес локации"
              },
              "terminals": {
                "x-stoplight": {
                  "id": "hxymaq32jts0i"
                },
                "type": "array",
                "description": "Список контрагентов с типом «Терминал», которые выполняют обработку перевозки в локации.",
                "items": {
                  "$ref": "#/components/schemas/Contractor",
                  "x-stoplight": {
                    "id": "lkdw6yc110gza"
                  }
                }
              },
              "level": {
                "type": "string",
                "x-stoplight": {
                  "id": "jlvh0rktlndk3"
                },
                "description": "Положение локации в иерархии топологии."
              }
            }
          }
        ]
      },
      "Cargo": {
        "title": "Груз",
        "description": "Объект системы, содержащий информацию о перевозимом грузе.",
        "allOf": [
          {
            "$ref": "../models/mdm.json"
          },
          {
            "type": "object",
            "required": [
              "num",
              "desc",
              "amount",
              "weight",
              "package",
              "owner"
            ],
            "properties": {
              "num": {
                "type": "string",
                "x-stoplight": {
                  "id": "6b6ku7pnzfq45"
                },
                "description": "Идентификатор грузовой единицы"
              },
              "desc": {
                "type": "string",
                "x-stoplight": {
                  "id": "2q4j7ko09cxv0"
                },
                "description": "Текстовое описание груза"
              },
              "amount": {
                "type": "integer",
                "x-stoplight": {
                  "id": "2qb28d374yvtb"
                },
                "minimum": 1,
                "default": 1,
                "description": "Количество груза в единицах измерения (штуки)"
              },
              "weight": {
                "type": "integer",
                "x-stoplight": {
                  "id": "ddshc3nrs45yf"
                },
                "minimum": 1,
                "description": "Суммарный вес груза в килограммах вместе с упаковкой (брутто)"
              },
              "volume": {
                "type": "number",
                "x-stoplight": {
                  "id": "cu523f6jit5xp"
                },
                "format": "float",
                "exclusiveMinimum": 0,
                "description": "Объем груза в метрах кубических. Вещественное число с тремя знаками после запятой."
              },
              "package": {
                "type": "string",
                "x-stoplight": {
                  "id": "klgk8x8u9k3r5"
                },
                "description": "Сведения об упаковке груза"
              },
              "owner": {
                "$ref": "#/components/schemas/Contractor",
                "x-stoplight": {
                  "id": "g0zfzrfllyute"
                },
                "description": "Контрагент, являющийся владельцем перевозимого груза"
              }
            }
          }
        ]
      }
    },
    "responses": {
      "ShipmentRfpList": {
        "description": "Список заявок на перевозку",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ShipmentRfp"
              }
            }
          }
        }
      },
      "offerList": {
        "description": "Список предложений к заявке на перевозку",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "portal"
    }
  ]
}